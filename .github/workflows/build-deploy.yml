name: Build and Deploy Code

on: [push, pull_request]
  # push:
  #   branches:
  #     - "main"
  # pull_request:
  #   branches:
  #     - "test_branch"

# https://github.com/actions/setup-python/blob/main/docs/advanced-usage.md#matrix-testing



jobs:
  build: 
    environment:
      name: testing
    env:
      DATABASE_HOSTNAME: ${{secrets.DATABASE_HOSTNAME}}
      DATABASE_PORT: ${{secrets.DATABASE_PORT}}
      DATABASE_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
      DATABASE_NAME: ${{secrets.DATABASE_NAME}}
      DATABASE_USERNAME: ${{secrets.DATABASE_USERNAME}}
      SECRET_KEY: ${{secrets.SECRET_KEY}}
      ALGORITHM: ${{secrets.ALGORITHM}}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${{secrets.ACCESS_TOKEN_EXPIRE_MINUTES}}
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: ${{secrets.DATABASE_PASSWORD}}
          POSTGRES_DB: ${{secrets.DATABASE_NAME}}_test
        ports:
          - 5432:5432
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [ '3.x' ]
    steps:
      - name: pulling git repo
        uses: actions/checkout@v3
      - name: install python version '3.x'
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}
          # python-version: [ '2.x', '3.x', 'pypy2.7', 'pypy3.7', 'pypy3.8' ]
      - name: update pip
        run: python -m pip install --upgrade pip
      - name: install all dependencies
        run: pip install -r requirements.txt
      - name: test with pytest
        run: |
          pip install pytest
          pytest
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }} 
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Build and push
        uses: docker/build-push-action@v4
        with:
          context: .
          file: ./Dockerfile
          push: true
          tags: ${{ secrets.DOCKER_HUB_USERNAME }}/fastapi:latest
          cache-from: type=registry,ref=user/app:latest
          cache-to: type=inline
      - name: Image digest
        run: echo ${{ steps.docker_build.outputs.digest }}


  deploy:
    runs-on: ubuntu-latest
    needs: [build]
    environment:
      name: production

    steps:
      - name: Deploying stuff
        run: echo "going to deploy some stuff"
      
      - name: deploy to ubuntu server
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.PROD_HOST }}
          username: ${{ secrets.PROD_USERNAME }}
          password: ${{ secrets.PROD_PASSWORD }}
          script: |
            cd app/src
            git pull
            echo ${{ secrets.PROD_PASSWORD }} | sudo -S systemctl restart api